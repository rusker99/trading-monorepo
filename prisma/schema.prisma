generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccountPerformance {
  id     Int      @id @default(autoincrement())
  date   DateTime @db.Date
  amount Decimal  @db.Decimal(9, 2)
  userId Int
  user   User     @relation(fields: [userId], references: [id])

  @@unique([date, userId], map: "accountperformance_uk")
}

model Instrument {
  id           Int           @id(map: "instrument_pk") @default(autoincrement())
  symbol       String        @unique(map: "instrument_uk") @db.VarChar(10)
  type         String        @db.VarChar(10)
  description  String?       @db.VarChar(100)
  orders       Order[]
  prices       Price[]
  transactions Transaction[]
}

model Price {
  id           Int        @id @default(autoincrement())
  bid          Decimal    @db.Decimal(16, 4)
  last         Decimal    @db.Decimal(16, 4)
  ask          Decimal    @db.Decimal(16, 4)
  date         DateTime   @db.Timestamp(6)
  change       Decimal    @db.Decimal(10, 5)
  instrumentId Int
  instrument   Instrument @relation(fields: [instrumentId], references: [id], map: "Price_Instrument_id_fkey")
}

model Transaction {
  id           Int        @id @default(autoincrement())
  quantity     Decimal    @db.Decimal(10, 5)
  price        Decimal    @db.Decimal(16, 4)
  userId       Int
  currency     String     @db.VarChar(3)
  tradeDate    DateTime   @db.Timestamp(6)
  type         String     @db.VarChar(3)
  instrumentId Int
  user         User       @relation(fields: [userId], references: [id], map: "Trading_userId_fkey")
  instrument   Instrument @relation(fields: [instrumentId], references: [id], map: "Transaction_Instrument_id_fkey")
}

model User {
  id                  Int                  @id @default(autoincrement())
  userName            String               @unique(map: "user_uk") @db.VarChar(100)
  firstName           String               @db.VarChar(50)
  lastName            String               @db.VarChar(50)
  email               String               @db.VarChar(100)
  accountPerformances AccountPerformance[]
  transactions        Transaction[]
}

model Order {
  id           Int        @id @default(autoincrement())
  action       String     @db.VarChar(10)
  type         String     @db.VarChar(10)
  limitPrice   Decimal?   @db.Decimal(16, 4)
  filledPrice  Decimal?   @db.Decimal(16, 4)
  status       String     @db.VarChar(10)
  quantity     Decimal    @db.Decimal(10, 5)
  orderDate    DateTime   @default(now()) @db.Timestamp(6)
  filledDate   DateTime?  @db.Timestamp(6)
  instrumentId Int
  Instrument   Instrument @relation(fields: [instrumentId], references: [id], map: "Order_Instrument_id_fkey")
}
